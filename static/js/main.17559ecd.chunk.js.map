{"version":3,"sources":["components/Carousel.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","images","props","position","goToNext","step","itemWidth","frameSize","infinite","lastItem","length","newPosition","setState","goToPrev","this","animationDuration","carouselListStyle","transform","transition","carouselStyle","width","prevIsDisabled","undefined","nextIsDisabled","className","style","map","image","src","alt","type","onClick","Component","Form","htmlFor","id","name","min","max","defaultValue","onChange","handleStepChange","App","e","target","value","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17559ecd.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\nimport { CarouselProps, CarouselState } from '../types';\n\nclass Carousel extends Component<CarouselProps, CarouselState> {\n  state = {\n    images: this.props.images,\n    position: 0,\n  };\n\n  goToNext = () => {\n    const {\n      step, itemWidth, frameSize, infinite,\n    } = this.props;\n    const { position, images } = this.state;\n    const lastItem = -(images.length * itemWidth - frameSize * itemWidth);\n    let newPosition = position - (step * itemWidth);\n\n    if (newPosition < lastItem) {\n      newPosition = lastItem;\n    }\n\n    if (infinite && position === lastItem) {\n      newPosition = 0;\n    }\n\n    this.setState({ position: newPosition });\n  };\n\n  goToPrev = () => {\n    const {\n      step, itemWidth, frameSize, infinite,\n    } = this.props;\n    const { position, images } = this.state;\n    const lastItem = -(images.length * itemWidth - frameSize * itemWidth);\n    let newPosition = position + (step * itemWidth);\n\n    if (newPosition > 0) {\n      newPosition = 0;\n    }\n\n    if (infinite && position === 0) {\n      newPosition = lastItem;\n    }\n\n    this.setState({ position: newPosition });\n  };\n\n  render() {\n    const {\n      itemWidth, frameSize, images, infinite, animationDuration,\n    } = this.props;\n    const { position } = this.state;\n\n    const carouselListStyle = {\n      transform: `translateX(${position}px)`,\n      transition: `transform ${animationDuration / 1000}s ease-in-out`,\n    };\n    const carouselStyle = { width: itemWidth * frameSize };\n\n    const prevIsDisabled = (!infinite && position === 0)\n      ? 'isDisabled'\n      : undefined;\n\n    const lastItem = -(images.length * itemWidth - frameSize * itemWidth);\n    const nextIsDisabled = (!infinite && position === lastItem)\n      ? 'isDisabled'\n      : undefined;\n\n    return (\n      <div className=\"Carousel\" style={carouselStyle}>\n        <ul className=\"Carousel__list\" style={carouselListStyle}>\n          {\n            images.map(image => (\n              <li key={image}>\n                <img src={image} alt={image} style={{ width: itemWidth }} />\n              </li>\n            ))\n          }\n          {/* <li><img src=\"./img/1.png\" alt=\"1\" /></li> */}\n        </ul>\n\n        <div className=\"controls\">\n          <button\n            type=\"button\"\n            className={prevIsDisabled}\n            onClick={this.goToPrev}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className={nextIsDisabled}\n            onClick={this.goToNext}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import { Component } from 'react';\nimport { FormProps } from '../types';\nimport './Form.scss';\n\nexport class Form extends Component<FormProps, {}> {\n  state = {};\n\n  render() {\n    const { images } = this.props;\n\n    return (\n      <form>\n        <label htmlFor=\"stepId\">\n          Step\n          <input\n            id=\"stepId\"\n            name=\"step\"\n            type=\"number\"\n            min={1}\n            max={images.length}\n            defaultValue={2}\n            onChange={this.props.handleStepChange}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\">\n          Frame size\n          <input\n            id=\"frameId\"\n            name=\"frameSize\"\n            type=\"number\"\n            min={1}\n            max={images.length}\n            defaultValue={3}\n            onChange={this.props.handleStepChange}\n          />\n        </label>\n\n        <label htmlFor=\"itemId\">\n          Item Width\n          <input\n            id=\"itemId\"\n            name=\"itemWidth\"\n            type=\"number\"\n            min={50}\n            step={10}\n            max={300}\n            defaultValue={130}\n            onChange={this.props.handleStepChange}\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\">\n          Animation Duration\n          <input\n            id=\"animationDuration\"\n            name=\"animationDuration\"\n            type=\"number\"\n            min={0}\n            step={250}\n            max={5000}\n            defaultValue={1000}\n            onChange={this.props.handleStepChange}\n          />\n        </label>\n\n        <label htmlFor=\"infinite\">\n          Infinite\n          <input\n            id=\"infinite\"\n            name=\"infinite\"\n            type=\"checkbox\"\n            onChange={this.props.handleStepChange}\n          />\n        </label>\n      </form>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { AppState } from './types';\nimport { Form } from './components/Form';\n\nclass App extends Component<{}, AppState> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleStepChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    if (name === 'infinite') {\n      this.setState(prev => ({ infinite: !prev.infinite }));\n    } else {\n      this.setState(prev => ({ ...prev, [name]: +value }));\n    }\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <Carousel {...this.state} />\n        <Form images={images} handleStepChange={this.handleStepChange} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}